1. What are the two values of the Boolean data type? How do you write them?

True and False


2. What are the three Boolean operators?

and, or, not


3. Write out the truth tables of each Boolean operator (that is, every possible combination of Boolean values for the operator and what they evaluate to).

Expression Evaluates to . . .

True and True (= True)
True and False (= False)
False and True (= False)
False and False (= False)


4. What do the following expressions evaluate to?

(5 > 4) and (3 == 5) (= False)
not (5 > 4)  (= False)
(5 > 4) or (3 == 5) (= True)
not ((5 > 4) or (3 == 5)) (= True)
(True and True) and (True == False)  (= True)
(not False) or (not True)  (= True)


5. What are the six comparison operators?

Operator Meaning

== Equal to
!= Not equal to
< Less than
> Greater than
<= Less than or equal to 
>= Greater than or equal to


6. What is the difference between the equal to operator and the assignment operator?

The 'equal to' operator is comparing two values (i.e. 'spam' == 'spam') wheras the assignment operator is specificying a specific value (i.e. spam = 10)


7. Explain what a condition is and where you would use one.

Conditions always evaluate down to a Boolean value, True or False. A flow control statement decides what to do based on whether its condition is True or False, and almost every flow control statement uses a condition.


8. Identify the three blocks in this code:

spam = 0
if spam == 10:  - BLOCK 1
    print('eggs') - BLOCK 2
    if spam > 5:
        print('bacon') - BLOCK 3
    else:
        print('ham')
    print('spam')
print('spam')


9. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam.

spam = 1

if spam == 1:
    print('Hello')
elif spam == 2:
    print('Howdy')
else:
    print('Greetings!')


10. What keys can you press if your program is stuck in an infinite loop?

CTRL-C


11. What is the difference between break and continue?

A break will stop the execution of a while loop whereas continue will loop back the start and restart the while loop. 


12. What is the difference between range(10), range(0, 10), and range(0, 10, 1) in a for loop?

- range(10) - This sets the highest value (9) with 0 being the defualt lowest value
- range(0, 10) - This sets the lowest value (0) and highest value (9)
- range(0, 10, 1) - This sets the lowest value (0), the highest value (9), and a stepping argument (1). In this case, the range will go up in single increments. If it were set to 2 it would go up in even numbers. 


13. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent program that prints the numbers 1 to 10 using a while loop.

# A

for i in range(1, 10 + 1):
    print(str(i))

# B

i = 1
while i < 11:
    print(str(i))
    i = i + 1


14. If you had a function named bacon() inside a module named spam, how would you call it after importing spam?

import spam

spam.bacon()


Extra credit: Look up the round() and abs() functions on the internet, and find out what they do. Experiment with them in the interactive shell.

round()

num1 = 240.564
num2 = 456.254

print(num1.__round__())
print(num2.__round__())


abs()

number = -5
absolute_value = abs(number)

print("Original number:", number)
print("Absolute value:", absolute_value)

(The absolute value shows the distance between the number and 0 regardless of whether it is a positive or negative number.)