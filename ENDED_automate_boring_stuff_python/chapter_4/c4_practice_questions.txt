1. What is []?

This is an empty list. 


2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)

spam = [2, 4, 6, 8, 10]

spam[2] = 'hello'


For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].


3. What does spam[int(int('3' * 2) // 11)] evaluate to?

The expression involves several steps:

- '3' * 2 results in the string '33'.
- int('33') converts the string '33' to the integer 33.
- int('33') // 11 performs integer division, resulting in the value 3.
- Now, spam[3] is accessing the element at index 3 in the list 'spam'. Remember that Python uses 0-based indexing, so the elements are at indices 0, 1, 2, and 3.

- Given the list ['a', 'b', 'c', 'd'], spam[3] retrieves the element at index 3, which is 'd'. 

Answer given by ChatGPT


4. What does spam[-1] evaluate to?

'd'


5. What does spam[:2] evaluate to?

['a', 'b']


For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].

6. What does bacon.index('cat') evaluate to?

1


7. What does bacon.append(99) make the list value in bacon look like?

[3.14, 'cat', 11, 'cat', True, 99]


8. What does bacon.remove('cat') make the list value in bacon look like?

[3.14, 11, 'cat', True]


9. What are the operators for list concatenation and list replication?

The += operator can do string and list concatenation, and the *= operator can do string and list replication.


10. What is the difference between the append() and insert() list methods?

The append() list method will place the variable at the end of a list, whereas with insert() for you can choose where the variable is to be placed. For example "example.instert(0, 'hello')" will place 'hello' at the beginning of the list.


11. What are two ways to remove values from a list?

a. You can use the remove() function. For example "example.remove('cat')" This will only remove the first 'cat' variable, not all. 
b.  The "del" function is useful when you know the index of the item that you would like to remove. For exmple:

spam = ['bat', 'rat', 'cat', 'elephant']
del spam[2]
print(spam)

['bat', 'rat', 'elephant']

Remember that idexes start at 0, not 1.


12. Name a few ways that list values are similar to string values.

Many of the things you can do with lists can also be done with strings and other values of sequence types: indexing; slicing; and using them with for loops, with len(), and with the in and not in operators. Both lists and strings support membership tests with in and not in operators. However, lists are mutable whereas strings are not. 


13. What is the difference between lists and tuples?

A list is mutable (editable) whereas a tuple is not. 


14. How do you type the tuple value that has just the integer value 42 in it?

example = (42,)

Place the trailing comma "," at the end of a single value and it will allow you to run the len() function on it, otherwise you'll get an error. 


15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?

a.
tuple(['cat', 'dog', 5])
('cat', 'dog', 5)

b.
list(('cat', 'dog', 5))
['cat', 'dog', 5]


16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?

Variables are storing references to the computer memory locations where the values are stored. This means that if multiple variables are pointing toward the same list and that list is updated, it will be changed for all variables. 


17. What is the difference between copy.copy() and copy.deepcopy()?

a. The "copy.copy()" function can be used to make a duplicate copy of a mutable value like a list or dictionary, not just a copy of a reference.
b. If the list you need to copy contains lists, then use the "copy.deepcopy()" function instead of copy.copy(). The deepcopy() function will copy these inner lists as well.